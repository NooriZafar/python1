delete:
number3=[9, 17, 10, 18, 55, 120, 90]
print("Original Items are:", number3)
del number3[5]
print("After Deleting Item at Index 5:", number3)
del number3[0]
print("After Deleting Item at Index 0:", number3)
del number3[3]
print("After Deleting Item at Index 3:", number3)


Original Items are:[9, 17, 10, 18, 55, 120, 90]
After Deleting Item at Index 5:[9, 17, 10, 18, 55, 90]
After Deleting Item at Index 0:[17, 10, 18, 55, 90]
After Deleting Item at Index 3:[17, 10, 18, 90]


Pop:

number4=[17, 6, 10, 18, 120, 220, 90, 119]
print("Original Items are:", number4)
a = number4.pop(6)
print("After Deleting Item at Index 6:", number4)
print("Items Extracted by the Pop Function:", a)
b = number4.pop(0)
print("\nAfter Deleting Item at Index 0:", number4)
print("Items Extracted by the Pop Function       : ", b)
c = number4.pop(4)
print("\nAfter Deleting Item at Index 4:", number4)
print("Items Extracted by the Pop Function:", c)

Output:

Original Items are:[17, 6, 10, 18, 120, 220, 90, 119]
After Deleting Item at Index 6:[17, 6, 10, 18, 120, 220, 119]
Items Extracted by the Pop Function:90
After Deleting Item at Index 0:[6, 10, 18, 120, 220, 119]
Items Extracted by the Pop Function:17
After Deleting Item at Index 4:[6, 10, 18, 120, 119]
Items Extracted by the Pop Function:220


Remove:

number5=[55, 98, 10, 18, 22, 162, 170, 90]
print("Original Items are:", number5)
number5.remove(22)
print("After Removing 22 are:", number5)
number5.remove(98)
print("After Removing 98 are:", number5)
number5.remove(162)
print("After Removing 162 are:", number5)

Output:

Original Items are:[55, 98, 10, 18, 22, 162, 170, 90]
After Removing 22 are:[55, 98, 10, 18, 162, 170, 90]
After Removing 98 are:[55, 10, 18, 162, 170, 90]
After Removing 162 are:[55, 10, 18, 170, 90]

Copy:

numbers6=[6, 10, 18, 220, 90, 119]
print("Items are:", numbers6)
newNum = numbers6.copy()
print("\nNew Items  are:", newNum)

Output:

Items are:[6, 10, 18, 220, 90, 119]
New Items  are:[6, 10, 18, 220, 90, 119]

Clear:

numbers7=[6, 10, 18, 220, 90, 119]
print("Items are:", numbers7)
new = numbers7.clear()
print("\nNew Items  are:", new)

Output:

Items are:[6, 10, 18, 220, 90, 119]
New Items  are:None

Count:

numbers8=[22, 6, 15, 19, 22, 90, 19, 22, 6, 19, 22]
print(numbers8)
a=numbers8.count(22)
print("Number of Times 22 was repeated:", a)
b = numbers8.count(6)
print("Number of Times 6 was repeated:", b)
c = numbers8.count(19)
print("Number of Times 19 was repeated:", c)

Output:

[22, 6, 15, 19, 22, 90, 19, 22, 6, 19, 22]
Number of Times 22 was repeated:4
Number of Times 6 was repeated:2
Number of Times 19 was repeated:3

Index:

numbers=[22, 6, 12, 15, 19, 16, -9, 4]
print("Items are:", numbers)
a=numbers.index(12)
print("Index Position of 12:", a)
b=numbers.index(-9)
print("Index Position of -9:", b)
c=numbers.index(19)
print("Index Position of 19:", c)

Output:

Items are:[22, 6, 12, 15, 19, 16, -9, 4]
Index Position of 12:2
Index Position of -9:6
Index Position of 19:4

Reverse:

numbers=[22, 6, 12, 15, 19, 16, -9, 4]
print("Items are:", numbers)
numbers.reverse()
print("\nNew Items are:", numbers)

Output:

Items are:[22, 6, 12, 15, 19, 16, -9, 4]
New Items are:[4, -9, 16, 19, 15, 12, 6, 22]

Sort:

numb=[2, 6, 0, 12, 15, -2, 19, 16, -9, 4]
print(numb)
numb.sort()
print("\nSorted:", numb)

Output:

[2, 6, 0, 12, 15, -2, 19, 16, -9, 4]
Sorted:[-9, -2, 0, 2, 4, 6, 12, 15, 16, 19]


Sum,Min,Max:

numbers=[2, 6, 17, 12, 15, -2, 25, 16, -9, 4]
print("Items are:", numbers)
# Max 
maximum=max(numbers)
print("The Maximum Value in this:", maximum)
# Min
minimum=min(numbers)
print("The Minimum Value in this:", minimum)
# Sum
total=sum(numbers)
print("The Sum of all Value in this:", total)

Output:

Itemsw are:[2, 6, 17, 12, 15, -2, 25, 16, -9, 4]
The Maximum Value in this:25         
The Minimum Value in this:-9
The Sum of all Value in this:86

List Comprehensions:

numbers=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
new = []
for num in numbers:
   new.append(num)
print(new)
print("===================")
my = [num for num in numbers]
print(my)

Output:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
===================
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

List Comprehension Multiple Conditions:

b=[n for n in range(1, 150) if n % 2 == 0 if n % 5 == 0]
print(b)

Output:

[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140]


List Comprehension If:

b=[y for y in n1 if y % 2 == 0]
print(b)

Output:

[2, 4, 6, 8, 10]

List Comprehension If Else:

a=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(a)
b=["Even" if i % 2 == 0 else "Odd" for i in a]
print(b)

Output:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
['Odd', 'Even', 'Odd', 'Even', 'Odd', 'Even', 'Odd', 'Even', 'Odd', 'Even']

Nested For Loop:

numbers=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
a=[[i * j for j in range(1, 11)] for i in range(2, 4)]
print(a)

Output:

[[2, 4, 6, 8, 10, 12, 14, 16, 18, 20], [3, 6, 9, 12, 15, 18, 21, 24, 27, 30]]


Convert a list to a dictionary:

ls=['E', 69, 'J', 74, 'O', 79, 'T', 84, 'Y', 89]



# demo for all dictionary methods
dict1 = {1: "Python", 2: "Java", 3: "Ruby", 4: "Scala"}

# copy() method
dict2 = dict1.copy()
print(dict2)

# clear() method
dict1.clear()
print(dict1)

# get() method
print(dict2.get(1))

# items() method
print(dict2.items())

# keys() method
print(dict2.keys())

# pop() method
dict2.pop(4)
print(dict2)

# popitem() method
dict2.popitem()
print(dict2)

# update() method
dict2.update({3: "Scala"})
print(dict2)

# values() method
print(dict2.values())

Nested Dictionary:

child1={
  "name":"Emil",
  "year":2004
}
child2={
  "name":"Tobias",
  "year":2007
}
child3={
  "name":"Linus",
  "year":2011
}

myfamily={
  "child1":child1,
  "child2":child2,
  "child3":child3
}
print(myfamily)

Output:

{'child1': {'name': 'Emil', 'year': 2004}, 'child2': {'name': 'Tobias', 'year': 2007}, 'child3': {'name': 'Linus', 'year': 2011}}

myfamily={
  "child1":{
    "name":"Emil",
    "year":2004
  },
  "child2":{
    "name":"Tobias",
    "year":2007
  },
  "child3":{
    "name":"Linus",
    "year":2011
  }
}
print(myfamily)


Append:

number=[150, 200, 130, 340]
print("Original Items are:", number)
number.append(520)
print("After 520 appended are:", number)
number.append(650)
print("After 650 appended are:", number)
number.append(-70)
print("After -70 appended are:", number)

Output:

Original Items are:[150, 200, 130, 340]
After 520 appended are:[150, 200, 130, 340, 520]
After 650 appended are:[150, 200, 130, 340, 520, 650]
After -70 appended are:[150, 200, 130, 340, 520, 650, -70]
