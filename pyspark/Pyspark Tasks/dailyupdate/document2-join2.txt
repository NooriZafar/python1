## installing spark and libraries

!pip install pyspark
import pyspark
from pyspark import *
from pyspark.sql.types import *
from pyspark.sql import *
from pyspark.sql.functions import *

## create sparksession

spark=SparkSession.builder.appName('practise').getOrCreate()

## creating two data frames

emp = [(1,"Smith",-1,"2018","10","M",3000), 
    (2,"Rose",1,"2010","20","M",4000), 
    (3,"Williams",1,"2010","10","M",1000), 
    (4,"Jones",2,"2005","10","F",2000), 
    (5,"Brown",2,"2010","40","",-1), 
    (6,"Brown",2,"2010","50","" ,-1) 
  ]

## giving names to columns

empColumns = ["emp_id","name","superior_emp_id","year_joined", "dept_id","gender","salary"]

## creating dataframe and displaying data

empDF = spark.createDataFrame(data=emp, schema = empColumns)
empDF.printSchema()
empDF.show()

output:
root
 |-- emp_id: long (nullable = true)
 |-- name: string (nullable = true)
 |-- superior_emp_id: long (nullable = true)
 |-- year_joined: string (nullable = true)
 |-- dept_id: string (nullable = true)
 |-- gender: string (nullable = true)
 |-- salary: long (nullable = true)

+------+--------+---------------+-----------+-------+------+------+
|emp_id|    name|superior_emp_id|year_joined|dept_id|gender|salary|
+------+--------+---------------+-----------+-------+------+------+
|     1|   Smith|             -1|       2018|     10|     M|  3000|
|     2|    Rose|              1|       2010|     20|     M|  4000|
|     3|Williams|              1|       2010|     10|     M|  1000|
|     4|   Jones|              2|       2005|     10|     F|  2000|
|     5|   Brown|              2|       2010|     40|      |    -1|
|     6|   Brown|              2|       2010|     50|      |    -1|
+------+--------+---------------+-----------+-------+------+------+

# creating department table

dept = [("Finance",10,3000),("Marketing",20,2000),("Sales",30,5000),("IT",40,6000)]
deptColumns = ["dept_name","dept_id","salary"]
deptDF = spark.createDataFrame(data=dept, schema = deptColumns)
deptDF.printSchema()
deptDF.show(truncate=False)

output:
root
 |-- dept_name: string (nullable = true)
 |-- dept_id: long (nullable = true)
 |-- salary: long (nullable = true)

+---------+-------+------+
|dept_name|dept_id|salary|
+---------+-------+------+
|Finance  |10     |3000  |
|Marketing|20     |2000  |
|Sales    |30     |5000  |
|IT       |40     |6000  |
+---------+-------+------+

_____________________________________________________________________________________________________________________________________________________________
## write a program using pyspark in python and perform operation using joins---> performing join on 2 dataframe and one jointype
____________________________________________________________________________________________________________________________________________________________

def joinsDemo(df1,df2,jointype):

  if jointype in("full","leftanti"):

    d_out=df1.join(df2,df1.dept_id == df2.dept_id,jointype)
    d_out.filter("gender == 'M'").show()

  elif jointype == "fullouter":
    d_out=df1.join(df2,df1.dept_id == df2.dept_id,jointype)
    d_out.filter(df2.dept_id > 30).show()

  elif jointype == "inner":

    d_out=df1.join(df2,df1.salary > df2.salary,jointype)
    d_out.filter(df1.name.startswith("S")).show()
    #d_out.filter(df1.name.endswith("e")).show()

  elif jointype == "right":
    d_out=df1.join(df2,df1.dept_id == df2.dept_id,jointype)
    #d_out.select("emp_id","name").show()
    #d_out[d_out.name.isin("Smith","Rose")].show()
    #d_out.select("name","emp_id",d_out.name.like("%S%")).show()
    d_out.select(d_out.name.substr(1,3).alias("shortname")).show()

  else:

    d_out=df1.join(df2,df1.dept_id == df2.dept_id,jointype).select(df1.dept_id,df1.name,df1.gender,df1.salary,df2.dept_name,df2.dept_id)
    d_out=d_out.replace("","null")
    #d_out.select(d_out.columns[ 2: ])
    d_out.dropna().show()
    

  return d_out 

#performinf rigt join

joinsDemo(empDF,deptDF,"right")

output:

+---------+
|shortname|
+---------+
|      Jon|
|      Wil|
|      Smi|
|      Ros|
|     null|
|      Bro|
+---------+

#perform inner join

joinsDemo(empDF,deptDF,"inner")

output:

+------+-----+---------------+-----------+-----------+------+------+---------+-------+------+
|emp_id| name|superior_emp_id|year_joined|emp_dept_id|gender|salary|dept_name|dept_id|salary|
+------+-----+---------------+-----------+-----------+------+------+---------+-------+------+
|     1|Smith|             -1|       2018|         10|     M|  3000|Marketing|     20|  2000|
+------+-----+---------------+-----------+-----------+------+------+---------+-------+------+

#perform full join

joinsDemo(empDF,deptDF,"full")

output:

+------+--------+---------------+-----------+-----------+------+------+---------+-------+------+
|emp_id|    name|superior_emp_id|year_joined|emp_dept_id|gender|salary|dept_name|dept_id|salary|
+------+--------+---------------+-----------+-----------+------+------+---------+-------+------+
|     1|   Smith|             -1|       2018|         10|     M|  3000|  Finance|     10|  3000|
|     3|Williams|              1|       2010|         10|     M|  1000|  Finance|     10|  3000|
|     2|    Rose|              1|       2010|         20|     M|  4000|Marketing|     20|  2000|
+------+--------+---------------+-----------+-----------+------+------+---------+-------+------+


#perfrom fullouter

joinsDemo(empDF,deptDF,"fullouter")

output:
+------+-----+---------------+-----------+-----------+------+------+---------+-------+------+
|emp_id| name|superior_emp_id|year_joined|emp_dept_id|gender|salary|dept_name|dept_id|salary|
+------+-----+---------------+-----------+-----------+------+------+---------+-------+------+
|     5|Brown|              2|       2010|         40|      |    -1|       IT|     40|  6000|
+------+-----+---------------+-----------+-----------+------+------+---------+-------+------+

#perfom outer join

joinsDemo(empDF,deptDF,"outer")

output:
+------+--------+------+------+---------+-------+
|emp_id|    name|gender|salary|dept_name|dept_id|
+------+--------+------+------+---------+-------+
|     1|   Smith|     M|  3000|  Finance|     10|
|     3|Williams|     M|  1000|  Finance|     10|
|     4|   Jones|     F|  2000|  Finance|     10|
|     2|    Rose|     M|  4000|Marketing|     20|
|     5|   Brown|  null|    -1|       IT|     40|
+------+--------+------+------+---------+-------
_____________________________________________________________________________________________________________________________________



































