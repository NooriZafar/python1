### performing join operations

def joinsDemo(df1,df2,jointype):
	
  if jointype in("full","leftanti"):
    d_out=df1.join(df2,df1.emp_dept_id == df2.dept_id,jointype).show()

  elif jointype == "inner":
    d_out=df1.join(df2,df1.salary > df2.salary,jointype)
    d_out.filter("gender == 'M'").show()


  elif jointype == "fullouter":
    d_out=df1.join(df2,df1.emp_dept_id == df2.dept_id,jointype)
    d_out.filter(df2.dept_id > 30).show()
  

  elif jointype == "outer":
    d_out=df1.join(df2,df1.salary <= df2.salary,jointype)

    #display only columns which starts with s
    d_out.filter(df1.name.startswith("S")).show()
    #d_out.filter(df1.name.endswith("e")).show()
    #df1.withcolumn('salary after 2 years',df1['salary']+2).show()

 elif jointype == "fullouter":
    #d_out=df1.join(df2,df1.emp_dept_id == df2.dept_id,jointype)
    #d_out.select("emp_id","name").show()
    #d_out[d_out.name.isin("suhana","noori")].show()
    #d_out.select("name","age",d_out.name.like("%S%")).show()
    d_out.select(d_out.name.substr(1,3).alias("shortname")).show()

  else:
    d_out=df1.join(df2,df1.emp_dept_id == df2.dept_id,jointype).select(df1.emp_dept_id,df1.name,df1.gender,df1.salary,df2.dept_name,df2.dept_id)

    #remove null values
    d_out.filter("gender !=''").dropna().show()

  return d_out

joinsDemo(df1,df2,jointype)


